
package server;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Server", targetNamespace = "http://Server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Server {


    /**
     * 
     * @param uName
     * @param email
     * @param securityA
     * @param pWord
     * @param gender
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "register", targetNamespace = "http://Server/", className = "server.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://Server/", className = "server.RegisterResponse")
    @Action(input = "http://Server/Server/registerRequest", output = "http://Server/Server/registerResponse")
    public boolean register(
        @WebParam(name = "uName", targetNamespace = "")
        String uName,
        @WebParam(name = "pWord", targetNamespace = "")
        String pWord,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "securityA", targetNamespace = "")
        String securityA,
        @WebParam(name = "gender", targetNamespace = "")
        String gender);

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "connect", targetNamespace = "http://Server/", className = "server.Connect")
    @ResponseWrapper(localName = "connectResponse", targetNamespace = "http://Server/", className = "server.ConnectResponse")
    @Action(input = "http://Server/Server/connectRequest", output = "http://Server/Server/connectResponse")
    public void connect();

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "disconnect", targetNamespace = "http://Server/", className = "server.Disconnect")
    @ResponseWrapper(localName = "disconnectResponse", targetNamespace = "http://Server/", className = "server.DisconnectResponse")
    @Action(input = "http://Server/Server/disconnectRequest", output = "http://Server/Server/disconnectResponse")
    public void disconnect();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "retrieveReplies", targetNamespace = "http://Server/", className = "server.RetrieveReplies")
    @ResponseWrapper(localName = "retrieveRepliesResponse", targetNamespace = "http://Server/", className = "server.RetrieveRepliesResponse")
    @Action(input = "http://Server/Server/retrieveRepliesRequest", output = "http://Server/Server/retrieveRepliesResponse")
    public List<Object> retrieveReplies();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "retrieveTopics", targetNamespace = "http://Server/", className = "server.RetrieveTopics")
    @ResponseWrapper(localName = "retrieveTopicsResponse", targetNamespace = "http://Server/", className = "server.RetrieveTopicsResponse")
    @Action(input = "http://Server/Server/retrieveTopicsRequest", output = "http://Server/Server/retrieveTopicsResponse")
    public List<Object> retrieveTopics();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "retrieveComments", targetNamespace = "http://Server/", className = "server.RetrieveComments")
    @ResponseWrapper(localName = "retrieveCommentsResponse", targetNamespace = "http://Server/", className = "server.RetrieveCommentsResponse")
    @Action(input = "http://Server/Server/retrieveCommentsRequest", output = "http://Server/Server/retrieveCommentsResponse")
    public List<Object> retrieveComments();

    /**
     * 
     * @param uName
     * @param commentID
     * @param reply
     * @param date
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "postReply", targetNamespace = "http://Server/", className = "server.PostReply")
    @ResponseWrapper(localName = "postReplyResponse", targetNamespace = "http://Server/", className = "server.PostReplyResponse")
    @Action(input = "http://Server/Server/postReplyRequest", output = "http://Server/Server/postReplyResponse")
    public boolean postReply(
        @WebParam(name = "reply", targetNamespace = "")
        String reply,
        @WebParam(name = "date", targetNamespace = "")
        String date,
        @WebParam(name = "uName", targetNamespace = "")
        String uName,
        @WebParam(name = "commentID", targetNamespace = "")
        String commentID);

    /**
     * 
     * @param email
     * @param securityA
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPWord", targetNamespace = "http://Server/", className = "server.GetPWord")
    @ResponseWrapper(localName = "getPWordResponse", targetNamespace = "http://Server/", className = "server.GetPWordResponse")
    @Action(input = "http://Server/Server/getPWordRequest", output = "http://Server/Server/getPWordResponse")
    public String getPWord(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "securityA", targetNamespace = "")
        String securityA);

    /**
     * 
     * @param uName
     * @param pWord
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkDetails", targetNamespace = "http://Server/", className = "server.CheckDetails")
    @ResponseWrapper(localName = "checkDetailsResponse", targetNamespace = "http://Server/", className = "server.CheckDetailsResponse")
    @Action(input = "http://Server/Server/checkDetailsRequest", output = "http://Server/Server/checkDetailsResponse")
    public Boolean checkDetails(
        @WebParam(name = "uName", targetNamespace = "")
        String uName,
        @WebParam(name = "pWord", targetNamespace = "")
        String pWord);

    /**
     * 
     * @param title
     * @param description
     * @param date
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "postTopic", targetNamespace = "http://Server/", className = "server.PostTopic")
    @ResponseWrapper(localName = "postTopicResponse", targetNamespace = "http://Server/", className = "server.PostTopicResponse")
    @Action(input = "http://Server/Server/postTopicRequest", output = "http://Server/Server/postTopicResponse")
    public boolean postTopic(
        @WebParam(name = "title", targetNamespace = "")
        String title,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "date", targetNamespace = "")
        String date);

    /**
     * 
     * @param uName
     * @param topicID
     * @param date
     * @param comment
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "postComment", targetNamespace = "http://Server/", className = "server.PostComment")
    @ResponseWrapper(localName = "postCommentResponse", targetNamespace = "http://Server/", className = "server.PostCommentResponse")
    @Action(input = "http://Server/Server/postCommentRequest", output = "http://Server/Server/postCommentResponse")
    public boolean postComment(
        @WebParam(name = "comment", targetNamespace = "")
        String comment,
        @WebParam(name = "date", targetNamespace = "")
        String date,
        @WebParam(name = "uName", targetNamespace = "")
        String uName,
        @WebParam(name = "topicID", targetNamespace = "")
        String topicID);

    /**
     * 
     * @param uName
     * @param email
     * @param securityA
     * @param pWord
     * @param gender
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateInfo", targetNamespace = "http://Server/", className = "server.UpdateInfo")
    @ResponseWrapper(localName = "updateInfoResponse", targetNamespace = "http://Server/", className = "server.UpdateInfoResponse")
    @Action(input = "http://Server/Server/updateInfoRequest", output = "http://Server/Server/updateInfoResponse")
    public boolean updateInfo(
        @WebParam(name = "uName", targetNamespace = "")
        String uName,
        @WebParam(name = "pWord", targetNamespace = "")
        String pWord,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "securityA", targetNamespace = "")
        String securityA,
        @WebParam(name = "gender", targetNamespace = "")
        String gender);

}
