/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.79
 * Generated at: 2018-01-19 06:39:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;

public final class viewTopic_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("\t<head>\n");
      out.write("\t\t<title>View Topic | Forum</title>\n");
      out.write("\t\t\n");
      out.write("\t\t<link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\">\n");
      out.write("\t\t\n");
      out.write("\t\t<style type=\"text/css\">\n");
      out.write("\t\t\t*{\n");
      out.write("\t\t\t\tmargin:0;\n");
      out.write("\t\t\t\tpadding:0;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t\thtml{\n");
      out.write("\t\t\t\tmin-height:100%;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tbody{\n");
      out.write("\t\t\t\tbackground-image: url(\"mountains.jpg\");\n");
      out.write("\t\t\t\tbackground-repeat: no-repeat;\n");
      out.write("\t\t\t\tbackground-size:cover;\n");
      out.write("                                font-family:Lobster, cursive;\n");
      out.write("                                color: white;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t#center{\n");
      out.write("\t\t\t\ttext-align:center;\n");
      out.write("\t\t\t\tpadding:10px;\n");
      out.write("\t\t\t\twidth:400px;\n");
      out.write("\t\t\t\theight:400px;\n");
      out.write("\t\t\t\tborder-radius:40px;\n");
      out.write("\t\t\t\tbackground-color:white;\n");
      out.write("\t\t\t\tposition:absolute;\n");
      out.write("\t\t\t\ttop:50%;\n");
      out.write("\t\t\t\tleft:50%;\n");
      out.write("\t\t\t\tmargin-right:-50%;\n");
      out.write("\t\t\t\ttransform: translate(-50%, -50%);\n");
      out.write("\t\t\t\topacity:0.50;\n");
      out.write("\t\t\t\tfont-family:Lobster, cursive;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t#title{\n");
      out.write("\t\t\t\tfont-size: 24px;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tinput{\n");
      out.write("\t\t\t\twidth:250px;\n");
      out.write("\t\t\t\ttext-align:center;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t#button{\n");
      out.write("\t\t\t\tborder-radius:10px;\n");
      out.write("\t\t\t\tbackground-color:#ffcca2;\n");
      out.write("\t\t\t\tfont-family:Lobster, cursive;\n");
      out.write("\t\t\t\tfont-size:18px;\n");
      out.write("\t\t\t\tbox-shadow:2px 2px grey;\n");
      out.write("\t\t\t\tpadding:5px;\n");
      out.write("\t\t\t}\n");
      out.write("                        \n");
      out.write("                         .blocks{\n");
      out.write("                            padding: 10px;\n");
      out.write("                            margin: 10px;\n");
      out.write("                            background-color: cornsilk;\n");
      out.write("                            border-radius: 10px;\n");
      out.write("                            color: black;\n");
      out.write("                        }\n");
      out.write("                        \n");
      out.write("                          .blocks2{\n");
      out.write("                            padding: 10px;\n");
      out.write("                            margin: 10px;\n");
      out.write("                            background-color: cornsilk;\n");
      out.write("                            border-radius: 10px;\n");
      out.write("                            color: black;\n");
      out.write("                            text-align: right;\n");
      out.write("                          }\n");
      out.write("\t\t\n");
      out.write("\t\t</style>\n");
      out.write("\t</head>\n");
      out.write("\t\n");
      out.write("\t<body>\n");
      out.write("            <form action=\"addCommentServlet\" method=\"post\">\n");
      out.write("                Enter your comment: <input type =\"text\" name=\"comment\">\n");
      out.write("                <input type =\"submit\" value=\"Submit\" >     \n");
      out.write("            </form>\n");
      out.write("            <br>\n");
      out.write("            ");

                client.ForumWebService_Service service = new client.ForumWebService_Service();
                client.ForumWebService port = service.getForumWebServicePort();
                int id = Integer.parseInt(request.getParameter("Id")+"");
                request.getSession().setAttribute("topicID", id);
                List<Object> result = port.getComments(id);
                  for (int i = 0; i < result.size(); i++) {
                  String temp[] = (result.get(i) + "").split("#./");   
                  
                
      out.write("\n");
      out.write("                <div class=\"blocks\">\n");
      out.write("        <div style=\"margin: 20px;\">");
out.println("<br>" + temp[2] +  "<br><br> Comment By: "+  temp[1]); 
      out.write("</div>\n");
      out.write("         </div>\n");
      out.write("           <form action=\"addReplyServlet\" method=\"post\">\n");
      out.write("               Reply: <input type=\"text\"  name=\"reply\">\n");
      out.write("               <input type=\"text\" name=\"commentID\" value=\"");
      out.print(temp[0]);
      out.write("\" style=\"display: none\" readonly>\n");
      out.write("             <input type=\"submit\" value=\"Submit\">\n");
      out.write("         </form>\n");
      out.write("        ");

                
                List<Object> replies = port.getReplies(Integer.parseInt(temp[0]));
                for(int x = 0; x < replies.size(); x++){
                    String temp2[] = (replies.get(x) + "").split("#./");
                    
                  
      out.write("\n");
      out.write("                      <div class=\"blocks2\">\n");
      out.write("        <div style=\"margin: 20px;\">");
out.println(temp2[1]+"<br><br> Reply By:"+temp2[0]); 
      out.write("</div>\n");
      out.write("         </div>\n");
      out.write("       \n");
      out.write("                  \n");
      out.write("                  ");

                }
            }
        
      out.write("\n");
      out.write("        \n");
      out.write("       \n");
      out.write("\t</body>\n");
      out.write("</html>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
